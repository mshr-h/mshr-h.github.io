<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Keep Coding, Keep Climbing</title><link>https://keepcodingkeepclimbing.com/posts/</link><description>All Posts | Keep Coding, Keep Climbing</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 21 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://keepcodingkeepclimbing.com/posts/" rel="self" type="application/rss+xml"/><item><title>pipdeptreeでPythonパッケージの依存ツリーを見る</title><link>https://keepcodingkeepclimbing.com/posts/pipdeptree/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/pipdeptree/</guid><description>とあるPythonパッケージが依存しているパッケージを表示するには、pipdeptreeが便利。 オプションの指定なしで実行すると、全パッケー</description></item><item><title>pyenv導入手順メモ</title><link>https://keepcodingkeepclimbing.com/posts/setup-pyenv/</link><pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/setup-pyenv/</guid><description>pyenvとpyenv-virtualenvを導入する手順メモ。 環境 Ubuntu 20.04 LTS 手順 1 2 3 4 5 6 7 8 sudo apt install -y build-essential libffi-dev libssl-dev zlib1g-dev liblzma-dev libbz2-dev libreadline-dev libsqlite3-dev git git clone https://github.com/pyenv/pyenv.git ~/.pyenv git clone https://github.com/pyenv/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv echo &amp;#39;export</description></item><item><title>CIRCTのDialect調査</title><link>https://keepcodingkeepclimbing.com/posts/circt-dialect/</link><pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/circt-dialect/</guid><description>CIRCTに含まれるDialectとその変換パスを調査。 Dialectの変換はソースコードの以下に存在。 lib/Conversion Dialect一覧 CIRCTには以</description></item><item><title>MLIRの標準Dialect調査</title><link>https://keepcodingkeepclimbing.com/posts/mlir-default-dialect/</link><pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/mlir-default-dialect/</guid><description>MLIRでデフォルトで定義されているDialectとその変換パスを調査。 Dialectの変換はソースコードの以下に存在。 mlir/lib/Conversion Dialect一覧</description></item><item><title>ONNX MLIRのDialect調査</title><link>https://keepcodingkeepclimbing.com/posts/onnx-mlir-dialect/</link><pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/onnx-mlir-dialect/</guid><description>ONNX MLIRに含まれるDialectとその変換パスを調査。 Dialectの変換はソースコードの以下に存在。 src/Conversion Dialect一覧 ONNX MLIRには以</description></item><item><title>CIRCT(Circuit IR Compilers and Tools)をビルドする</title><link>https://keepcodingkeepclimbing.com/posts/build-circuit-ir-compiler/</link><pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/build-circuit-ir-compiler/</guid><description>CIRCT(Circuit IR Compilers and Tools)はMLIRベースのRTL生成ツール。 READMEにしたがってビルド、サンプル回路をコンパイルした。 環境 Ryzen 5 1600 32GBメモ</description></item><item><title>ONNX MLIRで出力したshared libraryを実行する</title><link>https://keepcodingkeepclimbing.com/posts/run-onnx-mlir-shared-library/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/run-onnx-mlir-shared-library/</guid><description>ONNX MLIRに付属のdebug.pyをベースに作成。 ONNX MLIRでONNXモデルファイルをshared libraryに変換し、PyRuntime</description></item><item><title>ONNX MLIRのdebug.py詳細</title><link>https://keepcodingkeepclimbing.com/posts/onnx-mlir-detail-debug-py/</link><pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/onnx-mlir-detail-debug-py/</guid><description>ONNX MLIRに付属のdebug.pyを動かすで動かしたdebug.pyの中を見る。 debug.pyの処理内容 概要 入力として指定したONNXモデ</description></item><item><title>ONNX MLIRに付属のdebug.pyを動かす</title><link>https://keepcodingkeepclimbing.com/posts/onnx-mlir-debug-py/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/onnx-mlir-debug-py/</guid><description>ONNX MLIRに付属のdebug.pyを動かす手順。 .soファイルの実行手順を解析するための事前準備。 前提条件 環境 macOS Catalina 10.15.6 Python 3.7.5 (pyenvで導入)</description></item><item><title>MLIR EmitCをビルドする</title><link>https://keepcodingkeepclimbing.com/posts/build-mlir-emitc/</link><pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/build-mlir-emitc/</guid><description>C++コードを出力できるMLIR Dialectをビルドする。 ONNX MLIRをビルドするでMLIRをビルド済みとする。 MLIR(LLVM)のソース</description></item></channel></rss>