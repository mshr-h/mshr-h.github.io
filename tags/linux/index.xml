<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Linux - Tag - Keep Coding, Keep Climbing</title><link>https://mshr-h.com/tags/linux/</link><description>Linux - Tag - Keep Coding, Keep Climbing</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 08 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://mshr-h.com/tags/linux/" rel="self" type="application/rss+xml"/><item><title>Windows/LinuxでプロセスIDをC/Pythonから取得する</title><link>https://mshr-h.com/posts/get-pid-in-windows-linux-from-c-python/</link><pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate><author>    "Masahiro Hiramori"</author><guid>https://mshr-h.com/posts/get-pid-in-windows-linux-from-c-python/</guid><description>Windows/LinuxでプロセスIDをC/Pythonから取得する方法。 Windows/C GetCurrentProcessId()を使う。 1 2 3 4 5 6</description></item><item><title>TFRT(TensorFlow Runtime)をUbuntu 18.04 on WSLでビルドした</title><link>https://mshr-h.com/posts/building-tensorflow-runtime/</link><pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate><author>    "Masahiro Hiramori"</author><guid>https://mshr-h.com/posts/building-tensorflow-runtime/</guid><description>TFRT(TensorFlow Runtime)は、TensorFlowの新しい実行ランタイムでパフォーマンスが良いらしい。 Linux(WSL)上でビルドしたので、メモ。</description></item><item><title>macOSでRISC-V版FedoraをQEMUで起動する</title><link>https://mshr-h.com/posts/boot-fedora-on-risc-v-qemu/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><author>    "Masahiro Hiramori"</author><guid>https://mshr-h.com/posts/boot-fedora-on-risc-v-qemu/</guid><description>macOS上のQEMUでRISC-V版Fedoraを動かしてみた。ビルド済みバイナリは下記から取得できるものを使用。 https://fedorapeople.org/groups/risc-v/disk-images/ 実施環境 macOS Catalina 10.15.4 brew</description></item><item><title>RaspbianにTensorFlow Lite 2.1とOpenCV 4を導入する</title><link>https://mshr-h.com/posts/install-tflite-opencv-using-pyenv-on-raspbian/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><author>    "Masahiro Hiramori"</author><guid>https://mshr-h.com/posts/install-tflite-opencv-using-pyenv-on-raspbian/</guid><description>前回の記事で導入したRaspbian Busterに、TensorFlow LiteとOpenCVの環境を構築したのでメモ。 Python 3.7.7導入 1 2</description></item><item><title>Raspberry Pi 3にRaspbian Busterを導入する</title><link>https://mshr-h.com/posts/install-raspbian-on-raspberrypi-3/</link><pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate><author>    "Masahiro Hiramori"</author><guid>https://mshr-h.com/posts/install-raspbian-on-raspberrypi-3/</guid><description>Raspberry Pi 3 Model BにRaspbian Busterを導入したので作業メモ。 実施環境 MacBook Pro 13インチ 2017年モデル macOS Catalina 10.15.4 Raspberry Pi 3 Model B Raspbian Buster with desktop Raspbia</description></item><item><title>How to build onnx/onnx for your ARMv7l devices</title><link>https://mshr-h.com/posts/how-to-build-onnx-for-your-armv7l-devices/</link><pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate><author>    "Masahiro Hiramori"</author><guid>https://mshr-h.com/posts/how-to-build-onnx-for-your-armv7l-devices/</guid><description>microsoft/onnxruntime provides build instruction for ARMv7l python wheel which requires onnx/onnx. But it doesn&amp;rsquo;t provide binary package nor build instruction for ARMv7l. So I&amp;rsquo;ve written a dockerfile to build onnx/onnx python wheel.
Build instruction 1. Create a build directory 1 2 mkdir build-onnx cd build-onnx 2. Save the dockerfile on into the build directory Dockerfile.arm32v7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 FROM balenalib/raspberrypi3-python:latest-stretch-build ARG REPO_URL=https://github.</description></item><item><title>Ubuntu 18.04 LTSでibus-mozcのキーボード配列が日本語にならない問題と解決方法</title><link>https://mshr-h.com/posts/ubuntu-18.04-lts%E3%81%A7ibus-mozc%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E9%85%8D%E5%88%97%E3%81%8C%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AB%E3%81%AA%E3%82%89%E3%81%AA%E3%81%84%E5%95%8F%E9%A1%8C%E3%81%A8%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate><author>    "Masahiro Hiramori"</author><guid>https://mshr-h.com/posts/ubuntu-18.04-lts%E3%81%A7ibus-mozc%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E9%85%8D%E5%88%97%E3%81%8C%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AB%E3%81%AA%E3%82%89%E3%81%AA%E3%81%84%E5%95%8F%E9%A1%8C%E3%81%A8%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95/</guid><description>Ubuntu 18.04にibus-mozcをインストールしたところ、キーボード配列が日本語にならなかった。ibus-mozcの設定を書き換えると解決し</description></item></channel></rss>